import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.BmMagzGG.js";const c=JSON.parse('{"title":"AI Agent Setup","description":"Configure ck for AI coding assistants like Claude Code and Cursor. Best practices for semantic search, JSONL output, and MCP integration with AI agents.","frontmatter":{"title":"AI Agent Setup","description":"Configure ck for AI coding assistants like Claude Code and Cursor. Best practices for semantic search, JSONL output, and MCP integration with AI agents."},"headers":[],"relativePath":"guide/ai-agent-setup.md","filePath":"guide/ai-agent-setup.md"}'),e={name:"guide/ai-agent-setup.md"};function l(h,s,p,k,r,o){return n(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="configuring-ck-for-ai-coding-agents" tabindex="-1">Configuring ck for AI Coding Agents <a class="header-anchor" href="#configuring-ck-for-ai-coding-agents" aria-label="Permalink to &quot;Configuring ck for AI Coding Agents&quot;">​</a></h1><p>Best practices for integrating ck with AI coding assistants like Claude Code, Cursor, and other agent-based development tools.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>AI coding agents benefit significantly from semantic code search capabilities. This guide shows how to configure ck to work optimally with AI assistants, providing them with powerful code understanding and navigation features.</p><h3 id="benefits-of-ck-for-ai-agents" tabindex="-1">Benefits of ck for AI Agents <a class="header-anchor" href="#benefits-of-ck-for-ai-agents" aria-label="Permalink to &quot;Benefits of ck for AI Agents&quot;">​</a></h3><ul><li><strong>Conceptual search</strong> - Agents can find code by describing functionality, not just keywords</li><li><strong>Context gathering</strong> - Quickly retrieve relevant code sections for agent analysis</li><li><strong>Codebase understanding</strong> - Help agents map out architecture and patterns</li><li><strong>Precise results</strong> - Tunable thresholds ensure high-quality matches</li><li><strong>Efficient output</strong> - Structured formats (JSON/JSONL) for easy parsing</li></ul><h2 id="claude-code-integration" tabindex="-1">Claude Code Integration <a class="header-anchor" href="#claude-code-integration" aria-label="Permalink to &quot;Claude Code Integration&quot;">​</a></h2><p>Claude Code is Anthropic’s official CLI for Claude. Here’s how to configure it for optimal ck usage.</p><h3 id="tool-permissions" tabindex="-1">Tool Permissions <a class="header-anchor" href="#tool-permissions" aria-label="Permalink to &quot;Tool Permissions&quot;">​</a></h3><p>Add ck commands to your allowed tools in <code>settings.local.json</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;approvedCommandPatterns&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Bash(ck:*)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Bash(ck --index:*)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Bash(ck --sem:*)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Bash(ck --hybrid:*)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;Bash(ck --lex:*)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This allows Claude Code to:</p><ul><li>Run any ck command without prompting</li><li>Index your codebase automatically</li><li>Perform semantic, hybrid, and lexical searches</li><li>Access all ck features seamlessly</li></ul><h3 id="usage-patterns-documentation" tabindex="-1">Usage Patterns Documentation <a class="header-anchor" href="#usage-patterns-documentation" aria-label="Permalink to &quot;Usage Patterns Documentation&quot;">​</a></h3><p>Create a <code>.claude/</code> directory in your project with guidance for Claude:</p><div class="language-markdown vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">markdown</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># .claude/ck-semantic-search.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">## Semantic Code Search with ck</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Use </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`ck\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> for finding code by meaning, not just keywords.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Search Modes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`ck --sem &quot;concept&quot;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Semantic search (by meaning)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`ck --lex &quot;keyword&quot;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Lexical search (full-text)</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`ck --hybrid &quot;query&quot;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Combined regex + semantic</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \`ck --regex &quot;pattern&quot;\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> - Traditional regex search</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Best Practices</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::: tip Recommended Usage Patterns</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">1.</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **Index once per session**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: Run </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`ck --index .\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> at project start</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">2.</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **Use semantic for concepts**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &quot;error handling&quot;, &quot;database queries&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">3.</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **Use lexical for names**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &quot;getUserById&quot;, &quot;AuthController&quot;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">4.</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **Tune threshold**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`--threshold 0.7\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> for high-confidence results</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">5.</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;"> **Limit results**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\`--limit 20\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> for focused output</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:::</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">### Example Workflows</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># Find authentication logic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ck --sem &quot;user authentication&quot; src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># Find all TODO comments</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ck --lex &quot;TODO&quot; .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># Find error handling patterns with high confidence</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ck --sem --threshold 0.8 &quot;error handling&quot; src/</span></span></code></pre></div><h3 id="real-world-example" tabindex="-1">Real-World Example <a class="header-anchor" href="#real-world-example" aria-label="Permalink to &quot;Real-World Example&quot;">​</a></h3><p>From <a href="https://github.com/BeaconBay/ck/issues/36" target="_blank" rel="noreferrer">BeaconBay/ck#36</a>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Initial setup</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Semantic search for concepts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error handling&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;database connection pooling&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># High-confidence matches only</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;authentication logic&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Limited result set</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;caching strategy&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h2 id="general-ai-agent-configuration" tabindex="-1">General AI Agent Configuration <a class="header-anchor" href="#general-ai-agent-configuration" aria-label="Permalink to &quot;General AI Agent Configuration&quot;">​</a></h2><p>These practices apply to any AI coding assistant using ck.</p><h3 id="index-strategy" tabindex="-1">Index Strategy <a class="header-anchor" href="#index-strategy" aria-label="Permalink to &quot;Index Strategy&quot;">​</a></h3><p><strong>Index once, search many times:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># At project start or after significant changes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Check index status</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Incremental updates happen automatically</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Manual rebuild only if needed</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --clean</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p><strong>Why</strong>: Indexing is expensive (1-2 minutes for 1M LOC). Searches are fast (&lt;500ms). Let ck handle incremental updates automatically.</p><h3 id="search-mode-selection" tabindex="-1">Search Mode Selection <a class="header-anchor" href="#search-mode-selection" aria-label="Permalink to &quot;Search Mode Selection&quot;">​</a></h3><p>Choose the right mode for the task:</p><table tabindex="0"><thead><tr><th>Mode</th><th>Flag</th><th>Best For</th><th>Example</th></tr></thead><tbody><tr><td><strong>Semantic</strong></td><td><code>--sem</code></td><td>Conceptual understanding</td><td>“retry logic”, “input validation”</td></tr><tr><td><strong>Lexical</strong></td><td><code>--lex</code></td><td>Exact terms, names</td><td>“AuthService”, “TODO”, “FIXME”</td></tr><tr><td><strong>Hybrid</strong></td><td><code>--hybrid</code></td><td>Balance precision/recall</td><td>“JWT token validation”</td></tr><tr><td><strong>Regex</strong></td><td><code>--regex</code></td><td>Pattern matching</td><td><code>class.*Handler</code>, <code>fn \\w+Error</code></td></tr></tbody></table><h3 id="performance-tuning" tabindex="-1">Performance Tuning <a class="header-anchor" href="#performance-tuning" aria-label="Permalink to &quot;Performance Tuning&quot;">​</a></h3><h4 id="relevance-thresholds" tabindex="-1">Relevance Thresholds <a class="header-anchor" href="#relevance-thresholds" aria-label="Permalink to &quot;Relevance Thresholds&quot;">​</a></h4><p>Control result quality with <code>--threshold</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Exploratory search (cast wide net)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern matching&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Balanced search (default)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;authentication&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># High-confidence only (precise results)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error handling&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Very strict (only closest matches)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.9</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;exact concept&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Threshold Sweet Spot for AI Agents</p><p>Start with <code>0.7</code> for focused, high-confidence results. If you get too few matches, adjust down to <code>0.5</code> for broader coverage.</p></div><h4 id="result-limiting" tabindex="-1">Result Limiting <a class="header-anchor" href="#result-limiting" aria-label="Permalink to &quot;Result Limiting&quot;">​</a></h4><p>Prevent overwhelming output:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Top 10 results (quick overview)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Top 20 results (balanced)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Top 50 results (comprehensive)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Recommendation for AI agents</strong>: Use <code>--limit 20</code> by default to keep context windows manageable.</p><h4 id="pagination-for-large-results" tabindex="-1">Pagination for Large Results <a class="header-anchor" href="#pagination-for-large-results" aria-label="Permalink to &quot;Pagination for Large Results&quot;">​</a></h4><p>For comprehensive analysis:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># First page (25 results)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --page-size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Next page (if needed)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --page-size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cursor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;abc123&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><h3 id="output-formats-for-ai-consumption" tabindex="-1">Output Formats for AI Consumption <a class="header-anchor" href="#output-formats-for-ai-consumption" aria-label="Permalink to &quot;Output Formats for AI Consumption&quot;">​</a></h3><h4 id="jsonl-recommended" tabindex="-1">JSONL (Recommended) <a class="header-anchor" href="#jsonl-recommended" aria-label="Permalink to &quot;JSONL (Recommended)&quot;">​</a></h4><p>One JSON object per line - optimal for streaming and parsing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Full output</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --jsonl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Metadata only (smaller, faster)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --jsonl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-snippet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Custom snippet length</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --jsonl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --snippet-length</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 150</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Why JSONL for AI Agents</p><ul><li><strong>Stream-friendly</strong>: Process results as they arrive</li><li><strong>Memory-efficient</strong>: Parse one result at a time</li><li><strong>Error-resilient</strong>: One malformed line doesn’t break everything</li><li><strong>Standard format</strong>: Used by OpenAI, Anthropic, modern ML pipelines</li></ul></div><h4 id="json" tabindex="-1">JSON <a class="header-anchor" href="#json" aria-label="Permalink to &quot;JSON&quot;">​</a></h4><p>Single array - good for small result sets:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;pattern&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> jq</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.[].file&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span></span></code></pre></div><h3 id="embedding-model-selection" tabindex="-1">Embedding Model Selection <a class="header-anchor" href="#embedding-model-selection" aria-label="Permalink to &quot;Embedding Model Selection&quot;">​</a></h3><p>Choose the right model for your use case:</p><table tabindex="0"><thead><tr><th>Model</th><th>Best For AI Agents</th><th>Trade-offs</th></tr></thead><tbody><tr><td><strong>bge-small</strong> (default)</td><td>Quick searches, fast indexing</td><td>Smaller chunks (400 tokens)</td></tr><tr><td><strong>nomic-v1.5</strong></td><td>Large functions, documentation</td><td>Larger download (~500MB)</td></tr><tr><td><strong>jina-code</strong></td><td>Code-specialized understanding</td><td>Larger download (~500MB)</td></tr></tbody></table><p><strong>Recommendation</strong>:</p><ul><li>Start with <code>bge-small</code> (default) - works well for most codebases</li><li>Switch to <code>jina-code</code> if agent struggles with code-specific concepts</li><li>Use <code>nomic-v1.5</code> for documentation-heavy projects</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Switch models</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --switch-model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jina-code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h2 id="recommended-ckignore-for-ai-agents" tabindex="-1">Recommended .ckignore for AI Agents <a class="header-anchor" href="#recommended-ckignore-for-ai-agents" aria-label="Permalink to &quot;Recommended .ckignore for AI Agents&quot;">​</a></h2><p>Optimize indexing for AI-assisted development:</p><div class="language-gitignore vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gitignore</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># .ckignore</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Build artifacts (not useful for understanding code)</span></span>
<span class="line"><span>target/</span></span>
<span class="line"><span>dist/</span></span>
<span class="line"><span>build/</span></span>
<span class="line"><span>*.o</span></span>
<span class="line"><span>*.so</span></span>
<span class="line"><span>*.dylib</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Dependencies (too large, low signal)</span></span>
<span class="line"><span>node_modules/</span></span>
<span class="line"><span>vendor/</span></span>
<span class="line"><span>venv/</span></span>
<span class="line"><span>.venv/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Media files (not code)</span></span>
<span class="line"><span>*.png</span></span>
<span class="line"><span>*.jpg</span></span>
<span class="line"><span>*.gif</span></span>
<span class="line"><span>*.mp4</span></span>
<span class="line"><span>*.pdf</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Large data files</span></span>
<span class="line"><span>*.csv</span></span>
<span class="line"><span>*.json</span></span>
<span class="line"><span>*.xml</span></span>
<span class="line"><span>*.log</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Test fixtures (unless you search them)</span></span>
<span class="line"><span>fixtures/</span></span>
<span class="line"><span>__snapshots__/</span></span>
<span class="line"><span>*.snap</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Generated code (if not relevant)</span></span>
<span class="line"><span>*_pb2.py</span></span>
<span class="line"><span>*.generated.*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Documentation (include if you want AI to reference docs)</span></span>
<span class="line"><span># docs/</span></span>
<span class="line"><span># *.md</span></span></code></pre></div><p><strong>Key principle</strong>: Exclude anything that doesn’t help the AI understand your codebase’s logic and architecture.</p><h2 id="common-workflows" tabindex="-1">Common Workflows <a class="header-anchor" href="#common-workflows" aria-label="Permalink to &quot;Common Workflows&quot;">​</a></h2><h3 id="codebase-onboarding" tabindex="-1">Codebase Onboarding <a class="header-anchor" href="#codebase-onboarding" aria-label="Permalink to &quot;Codebase Onboarding&quot;">​</a></h3><p>Help AI agents understand new projects:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Index the project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find entry points</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;main entry point&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;application initialization&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Understand architecture</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dependency injection&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;data flow&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Map out key components</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;authentication&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;database queries&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;API endpoints&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h3 id="code-review-assistance" tabindex="-1">Code Review Assistance <a class="header-anchor" href="#code-review-assistance" aria-label="Permalink to &quot;Code Review Assistance&quot;">​</a></h3><p>Find code patterns for review:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Security checks</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;authentication logic&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;input validation&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SQL queries&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Code quality</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;TODO&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FIXME&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error handling&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Performance</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;caching&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;database connection&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><h3 id="refactoring-support" tabindex="-1">Refactoring Support <a class="header-anchor" href="#refactoring-support" aria-label="Permalink to &quot;Refactoring Support&quot;">​</a></h3><p>Find code to refactor:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find all implementations of a pattern</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user validation&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find similar code for consistency</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error response formatting&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find candidates for extraction</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;duplicate logic&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><h3 id="documentation-generation" tabindex="-1">Documentation Generation <a class="header-anchor" href="#documentation-generation" aria-label="Permalink to &quot;Documentation Generation&quot;">​</a></h3><p>Gather code for documentation:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find public APIs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;public api&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Find configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;configuration options&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Extract examples</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;example usage&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests/</span></span></code></pre></div><h2 id="mcp-integration" tabindex="-1">MCP Integration <a class="header-anchor" href="#mcp-integration" aria-label="Permalink to &quot;MCP Integration&quot;">​</a></h2><p>For MCP-compatible AI agents (Claude Desktop, etc.), use the MCP server:</p><h3 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-label="Permalink to &quot;Setup&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Start MCP server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --serve</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure in Claude Desktop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">claude</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-search</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --serve</span></span></code></pre></div><h3 id="mcp-specific-best-practices" tabindex="-1">MCP-Specific Best Practices <a class="header-anchor" href="#mcp-specific-best-practices" aria-label="Permalink to &quot;MCP-Specific Best Practices&quot;">​</a></h3><p>When using ck via MCP protocol:</p><ol><li><strong>Use pagination</strong> - Large result sets are paginated automatically</li><li><strong>Set reasonable page_size</strong> - Default 25 is good for most cases</li><li><strong>Use threshold parameter</strong> - Filter results for relevance</li><li><strong>Check index status</strong> - Call <code>index_status</code> tool before heavy searches</li><li><strong>Reindex after bulk changes</strong> - Call <code>reindex</code> tool after git pull</li></ol><p>See <a href="/ck/features/mcp-integration.html">MCP Integration</a> for complete API reference.</p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="agent-gets-irrelevant-results" tabindex="-1">Agent Gets Irrelevant Results <a class="header-anchor" href="#agent-gets-irrelevant-results" aria-label="Permalink to &quot;Agent Gets Irrelevant Results&quot;">​</a></h3><p><strong>Solution 1</strong>: Increase threshold</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Solution 2</strong>: Switch to hybrid search</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hybrid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Solution 3</strong>: Try a different model</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --switch-model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jina-code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h3 id="agent-searches-take-too-long" tabindex="-1">Agent Searches Take Too Long <a class="header-anchor" href="#agent-searches-take-too-long" aria-label="Permalink to &quot;Agent Searches Take Too Long&quot;">​</a></h3><p><strong>Solution 1</strong>: Limit results</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Solution 2</strong>: Exclude large directories</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add to .ckignore</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node_modules/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dist/</span></span></code></pre></div><p><strong>Solution 3</strong>: Use metadata-only output</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --jsonl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-snippet</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><h3 id="agent-misses-obvious-matches" tabindex="-1">Agent Misses Obvious Matches <a class="header-anchor" href="#agent-misses-obvious-matches" aria-label="Permalink to &quot;Agent Misses Obvious Matches&quot;">​</a></h3><p><strong>Solution 1</strong>: Lower threshold</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --threshold</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Solution 2</strong>: Use hybrid search</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hybrid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><p><strong>Solution 3</strong>: Use lexical search for exact terms</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lex</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ExactFunctionName&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span></code></pre></div><h3 id="index-out-of-date" tabindex="-1">Index Out of Date <a class="header-anchor" href="#index-out-of-date" aria-label="Permalink to &quot;Index Out of Date&quot;">​</a></h3><p><strong>Solution</strong>: Check status and reindex if needed</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If stale:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><h2 id="performance-benchmarks" tabindex="-1">Performance Benchmarks <a class="header-anchor" href="#performance-benchmarks" aria-label="Permalink to &quot;Performance Benchmarks&quot;">​</a></h2><p>Typical performance for AI agent workflows:</p><table tabindex="0"><thead><tr><th>Operation</th><th>Time</th><th>Notes</th></tr></thead><tbody><tr><td>Initial index (100K LOC)</td><td>~10s</td><td>One-time cost</td></tr><tr><td>Semantic search</td><td>&lt;500ms</td><td>Cached index</td></tr><tr><td>Hybrid search</td><td>&lt;300ms</td><td>Leverages both indices</td></tr><tr><td>Lexical search</td><td>&lt;100ms</td><td>Full-text index</td></tr><tr><td>Incremental update</td><td>&lt;1s</td><td>Only changed files</td></tr></tbody></table><h2 id="best-practices-summary" tabindex="-1">Best Practices Summary <a class="header-anchor" href="#best-practices-summary" aria-label="Permalink to &quot;Best Practices Summary&quot;">​</a></h2><p>✅ <strong>Do</strong>:</p><ul><li>Index once at project start</li><li>Use <code>--threshold 0.7</code> as default for AI agents</li><li>Use <code>--limit 20</code> to keep context manageable</li><li>Prefer JSONL output for parsing</li><li>Use semantic search for concepts</li><li>Use lexical search for exact identifiers</li><li>Tune thresholds based on result quality</li></ul><p>❌ <strong>Don’t</strong>:</p><ul><li>Re-index unnecessarily (ck handles incremental updates)</li><li>Use threshold above 0.9 (too restrictive)</li><li>Use threshold below 0.3 (too noisy)</li><li>Omit <code>--limit</code> for exploratory searches (too many results)</li><li>Index huge binary/media/data files</li><li>Mix search modes without understanding differences</li></ul><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Read <a href="/ck/features/mcp-integration.html">MCP Integration</a> for API details</li><li>See <a href="/ck/guide/choosing-interface.html">Choosing an Interface</a> for workflow comparison</li><li>Check <a href="/ck/features/semantic-search.html">Semantic Search</a> for search fundamentals</li><li>Review <a href="/ck/guide/advanced-usage.html">Advanced Usage</a> for power-user techniques</li><li>Explore <a href="/ck/reference/cli.html">CLI Reference</a> for all flags and options</li></ul>`,114)])])}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
