import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.BmMagzGG.js";const c=JSON.parse('{"title":"Editor Integration","description":"Native VSCode and Cursor extensions for ck semantic search. Search code without leaving your editor with inline results and live updates.","frontmatter":{"title":"Editor Integration","description":"Native VSCode and Cursor extensions for ck semantic search. Search code without leaving your editor with inline results and live updates."},"headers":[],"relativePath":"features/editor-integration.md","filePath":"features/editor-integration.md"}'),n={name:"features/editor-integration.md"};function l(h,s,r,o,p,d){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="editor-integration" tabindex="-1">Editor Integration <a class="header-anchor" href="#editor-integration" aria-label="Permalink to &quot;Editor Integration&quot;">​</a></h1><p>Bring ck’s semantic code search directly into your code editor with native extensions.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The ck VSCode/Cursor extension provides seamless integration of semantic search capabilities within your editor, eliminating context switching and enabling instant code exploration while you work.</p><h3 id="key-benefits" tabindex="-1">Key Benefits <a class="header-anchor" href="#key-benefits" aria-label="Permalink to &quot;Key Benefits&quot;">​</a></h3><ul><li><strong>Instant Access</strong>: Search without leaving your editor</li><li><strong>Visual Results</strong>: Clean, TUI-inspired interface with color-coded relevance scores</li><li><strong>Smart Navigation</strong>: Click to jump directly to code locations</li><li><strong>Live Updates</strong>: Results update as you type with intelligent debouncing</li><li><strong>Context Aware</strong>: Preview matches with surrounding code for better understanding</li></ul><h2 id="vscode-cursor-extension" tabindex="-1">VSCode &amp; Cursor Extension <a class="header-anchor" href="#vscode-cursor-extension" aria-label="Permalink to &quot;VSCode &amp; Cursor Extension&quot;">​</a></h2><h3 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h3><h4 id="for-cursor" tabindex="-1">For Cursor <a class="header-anchor" href="#for-cursor" aria-label="Permalink to &quot;For Cursor&quot;">​</a></h4><p>The simplest installation method for Cursor:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-vscode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install-cursor.sh</span></span></code></pre></div><p>Then restart Cursor to activate the extension.</p><h4 id="for-vs-code" tabindex="-1">For VS Code <a class="header-anchor" href="#for-vs-code" aria-label="Permalink to &quot;For VS Code&quot;">​</a></h4><p>Manual installation for VS Code:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-vscode</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-extension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><p>Restart VS Code to complete installation.</p><h4 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h4><ul><li><strong>ck binary</strong>: Must be installed and available in your PATH</li><li>Install with: <code>cargo install ck-search</code></li><li>Verify: <code>ck --version</code></li></ul><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><h3 id="search-capabilities" tabindex="-1">Search Capabilities <a class="header-anchor" href="#search-capabilities" aria-label="Permalink to &quot;Search Capabilities&quot;">​</a></h3><h4 id="hybrid-search-default" tabindex="-1">Hybrid Search (Default) <a class="header-anchor" href="#hybrid-search-default" aria-label="Permalink to &quot;Hybrid Search (Default)&quot;">​</a></h4><p>Combines semantic understanding with keyword precision for optimal results:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Search:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flow</span></span></code></pre></div><p>Returns both semantically related code (auth handling, login logic) and exact keyword matches, ranked by relevance.</p><div class="tip custom-block"><p class="custom-block-title">Default Mode</p><p>Hybrid search is enabled by default with automatic reranking for best relevance (⚡ RERANK badge shown when active).</p></div><h4 id="semantic-search" tabindex="-1">Semantic Search <a class="header-anchor" href="#semantic-search" aria-label="Permalink to &quot;Semantic Search&quot;">​</a></h4><p>Find code by meaning and concept, not just keywords:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Semantic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> handling</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patterns</span></span></code></pre></div><p>Returns all error handling approaches across your codebase, even if they use different terminology.</p><h4 id="regex-search" tabindex="-1">Regex Search <a class="header-anchor" href="#regex-search" aria-label="Permalink to &quot;Regex Search&quot;">​</a></h4><p>Traditional pattern matching when you need precise control:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mode:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Regex</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Query:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+handle</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">+Error</span></span></code></pre></div><p>Works like grep with full regular expression support.</p><h3 id="user-interface" tabindex="-1">User Interface <a class="header-anchor" href="#user-interface" aria-label="Permalink to &quot;User Interface&quot;">​</a></h3><h4 id="search-panel-layout" tabindex="-1">Search Panel Layout <a class="header-anchor" href="#search-panel-layout" aria-label="Permalink to &quot;Search Panel Layout&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">┌─────────────────────────────────────────────────────┐</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                    [mode] │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├─────────────────────────────────────────────────────┤</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Search </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">input</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> field]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                     │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Results</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (23) ⚡ RERANK                             │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ──────────────────────────────────────────────────</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ■■■■■■■■■■</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.87</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  src/auth/handler.ts:45</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   authenticate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> credentials</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ■■■■■■■■░░</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.73</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  src/middleware/auth.ts:12</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   verify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JWT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> token</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                  │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ■■■■■■░░░░</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.65</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  src/utils/errors.ts:89</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   handle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authentication</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> errors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                      │</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└─────────────────────────────────────────────────────┘</span></span></code></pre></div><h4 id="visual-elements" tabindex="-1">Visual Elements <a class="header-anchor" href="#visual-elements" aria-label="Permalink to &quot;Visual Elements&quot;">​</a></h4><ul><li><strong>Score Bars</strong>: Visual representation of relevance (cyan/blue/yellow/orange)</li><li><strong>Score Values</strong>: Numerical relevance scores (0.0 - 1.0)</li><li><strong>Relative Paths</strong>: Clean file paths relative to workspace root</li><li><strong>Line Numbers</strong>: Precise location information</li><li><strong>Context Preview</strong>: 2 lines before/after matches for understanding</li></ul><h4 id="real-time-features" tabindex="-1">Real-Time Features <a class="header-anchor" href="#real-time-features" aria-label="Permalink to &quot;Real-Time Features&quot;">​</a></h4><ul><li><strong>Live Search</strong>: Results update as you type (300ms debounce)</li><li><strong>Instant Preview</strong>: Hover to see more context</li><li><strong>Quick Navigation</strong>: Click any result to jump to exact location</li><li><strong>Brief Highlights</strong>: Temporary highlight when opening files</li><li><strong>Status Indicator</strong>: <ul><li>🟢 Green dot = Index up to date</li><li>🟡 Yellow dot = Needs reindexing</li></ul></li></ul><h2 id="commands" tabindex="-1">Commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;Commands&quot;">​</a></h2><p>Access ck functionality through VS Code’s command palette or keyboard shortcuts:</p><table tabindex="0"><thead><tr><th>Command</th><th>Shortcut (Windows/Linux)</th><th>Shortcut (macOS)</th><th>Description</th></tr></thead><tbody><tr><td><code>ck: Search</code></td><td><code>Ctrl+Shift+;</code></td><td><code>Cmd+Shift+;</code></td><td>Open search panel</td></tr><tr><td><code>ck: Search Selection</code></td><td><code>Ctrl+Shift+&#39;</code></td><td><code>Cmd+Shift+&#39;</code></td><td>Search selected text</td></tr><tr><td><code>ck: Reindex</code></td><td>—</td><td>—</td><td>Rebuild search index</td></tr></tbody></table><h3 id="usage-examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage Examples&quot;">​</a></h3><h4 id="quick-search-workflow" tabindex="-1">Quick Search Workflow <a class="header-anchor" href="#quick-search-workflow" aria-label="Permalink to &quot;Quick Search Workflow&quot;">​</a></h4><ol><li>Press <code>Ctrl+Shift+;</code> (or <code>Cmd+Shift+;</code>) to open search panel</li><li>Type your query: <code>database connection pooling</code></li><li>Results appear instantly with relevance scores</li><li>Press <code>↑</code>/<code>↓</code> to navigate results</li><li>Press <code>Enter</code> to open selected file at exact line</li></ol><h4 id="search-selection-workflow" tabindex="-1">Search Selection Workflow <a class="header-anchor" href="#search-selection-workflow" aria-label="Permalink to &quot;Search Selection Workflow&quot;">​</a></h4><ol><li>Select code in editor: <code>handleUserAuth</code></li><li>Press <code>Ctrl+Shift+&#39;</code> (or <code>Cmd+Shift+&#39;</code>)</li><li>Extension searches for semantically similar code</li><li>Review results to find related implementations</li><li>Click result to navigate</li></ol><h2 id="keyboard-navigation" tabindex="-1">Keyboard Navigation <a class="header-anchor" href="#keyboard-navigation" aria-label="Permalink to &quot;Keyboard Navigation&quot;">​</a></h2><p>Efficient keyboard-driven workflow:</p><table tabindex="0"><thead><tr><th>Key</th><th>Action</th></tr></thead><tbody><tr><td><code>↑</code> / <code>↓</code></td><td>Navigate through results</td></tr><tr><td><code>Enter</code></td><td>Open selected result or trigger search</td></tr><tr><td><code>Esc</code></td><td>Return focus to search input</td></tr><tr><td><code>Tab</code></td><td>Cycle through UI elements</td></tr></tbody></table><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>Customize ck extension behavior through VS Code settings:</p><h3 id="integration-mode" tabindex="-1">Integration Mode <a class="header-anchor" href="#integration-mode" aria-label="Permalink to &quot;Integration Mode&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cli&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Options: &quot;cli&quot; (default) or &quot;mcp&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><strong>CLI mode</strong>: Spawns ck binary for each search (current stable mode)</li><li><strong>MCP mode</strong>: Persistent connection via Model Context Protocol (experimental)</li></ul><h3 id="search-settings" tabindex="-1">Search Settings <a class="header-anchor" href="#search-settings" aria-label="Permalink to &quot;Search Settings&quot;">​</a></h3><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.defaultMode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hybrid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Options: &quot;hybrid&quot;, &quot;semantic&quot;, &quot;regex&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.topK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Maximum number of results</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.threshold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Minimum relevance threshold</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.pageSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              // Results per page</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Hybrid Threshold Scale</p><p>Hybrid search uses RRF scoring (~0.01-0.05 range). See <a href="/ck/features/hybrid-search.html#understanding-hybrid-thresholds">Hybrid Search thresholds</a> for details.</p></div><h3 id="binary-path" tabindex="-1">Binary Path <a class="header-anchor" href="#binary-path" aria-label="Permalink to &quot;Binary Path&quot;">​</a></h3><p>Specify custom ck binary location:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.cliPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/usr/local/bin/ck&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Default: &quot;ck&quot; (from PATH)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Useful when:</p><ul><li>ck is not in PATH</li><li>Using development builds</li><li>Testing multiple ck versions</li></ul><h2 id="index-management" tabindex="-1">Index Management <a class="header-anchor" href="#index-management" aria-label="Permalink to &quot;Index Management&quot;">​</a></h2><h3 id="automatic-index-updates" tabindex="-1">Automatic Index Updates <a class="header-anchor" href="#automatic-index-updates" aria-label="Permalink to &quot;Automatic Index Updates&quot;">​</a></h3><p>The extension monitors index status and displays indicators:</p><ul><li><strong>Green dot</strong>: Index is current, ready to search</li><li><strong>Yellow dot</strong>: Files have changed, reindexing recommended</li></ul><h3 id="manual-reindexing" tabindex="-1">Manual Reindexing <a class="header-anchor" href="#manual-reindexing" aria-label="Permalink to &quot;Manual Reindexing&quot;">​</a></h3><p>Rebuild the search index when needed:</p><ol><li>Open Command Palette (<code>Ctrl+Shift+P</code> / <code>Cmd+Shift+P</code>)</li><li>Run: <code>ck: Reindex</code></li><li>Progress notification appears</li><li>Status updates to green when complete</li></ol><div class="tip custom-block"><p class="custom-block-title">When to Reindex</p><ul><li>After pulling major code changes</li><li>After adding new files to gitignore</li><li>When search results seem outdated</li><li>After switching branches with significant changes</li></ul></div><h2 id="integration-modes" tabindex="-1">Integration Modes <a class="header-anchor" href="#integration-modes" aria-label="Permalink to &quot;Integration Modes&quot;">​</a></h2><h3 id="cli-mode-current" tabindex="-1">CLI Mode (Current) <a class="header-anchor" href="#cli-mode-current" aria-label="Permalink to &quot;CLI Mode (Current)&quot;">​</a></h3><p><strong>Status</strong>: ✅ Stable (Phase 1)</p><p>Spawns ck binary for each search operation:</p><p><strong>Advantages</strong>:</p><ul><li>Simple, reliable architecture</li><li>No persistent connections to manage</li><li>Each search is independent</li><li>Works with any ck version</li></ul><p><strong>Process Flow</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> types</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Debounce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Spawn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Parse</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JSONL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> →</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Display</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> results</span></span></code></pre></div><h3 id="mcp-mode-experimental" tabindex="-1">MCP Mode (Experimental) <a class="header-anchor" href="#mcp-mode-experimental" aria-label="Permalink to &quot;MCP Mode (Experimental)&quot;">​</a></h3><p><strong>Status</strong>: 🚧 Phase 2</p><p>Persistent connection via Model Context Protocol:</p><p><strong>Advantages</strong>:</p><ul><li>Faster repeat searches (no spawn overhead)</li><li>Streaming results for large codebases</li><li>Reduced CPU/memory churn</li><li>Advanced features (incremental updates, watching)</li></ul><p><strong>Coming Soon</strong>: Enable with <code>&quot;ck.mode&quot;: &quot;mcp&quot;</code> in settings.</p><h2 id="development" tabindex="-1">Development <a class="header-anchor" href="#development" aria-label="Permalink to &quot;Development&quot;">​</a></h2><h3 id="building-from-source" tabindex="-1">Building from Source <a class="header-anchor" href="#building-from-source" aria-label="Permalink to &quot;Building from Source&quot;">​</a></h3><p>Clone and build the extension:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clone ck repository</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/BeaconBay/ck.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck/ck-vscode</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Compile TypeScript</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install extension</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-extension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div><h3 id="development-workflow" tabindex="-1">Development Workflow <a class="header-anchor" href="#development-workflow" aria-label="Permalink to &quot;Development Workflow&quot;">​</a></h3><ol><li><p><strong>Open Extension Project</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-vscode/</span></span></code></pre></div></li><li><p><strong>Start Watch Mode</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> watch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Auto-compile on changes</span></span></code></pre></div></li><li><p><strong>Launch Extension Development Host</strong>:</p><ul><li>Press <code>F5</code> in VS Code</li><li>New window opens with extension loaded</li></ul></li><li><p><strong>Test Changes</strong>:</p><ul><li>Make code edits in <code>src/</code> or <code>webview/</code></li><li>Reload extension: <code>Ctrl+R</code> / <code>Cmd+R</code> in development host</li><li>Test functionality</li></ul></li><li><p><strong>Package Extension</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Creates .vsix file</span></span></code></pre></div></li></ol><h3 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-label="Permalink to &quot;Architecture Overview&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck-vscode/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extension.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Entry point, command registration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> searchPanel.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # Webview provider, UI management</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cliAdapter.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # Binary spawning, result parsing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mcpAdapter.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # MCP integration (experimental)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> types.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # TypeScript interfaces</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webview/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   ├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.js</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # UI logic, event handling</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> styles.css</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # TUI-inspired styling</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> resources/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   └──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> icon.png</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # Extension icon</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # Extension manifest</span></span></code></pre></div><h2 id="roadmap" tabindex="-1">Roadmap <a class="header-anchor" href="#roadmap" aria-label="Permalink to &quot;Roadmap&quot;">​</a></h2><h3 id="completed-✅" tabindex="-1">Completed ✅ <a class="header-anchor" href="#completed-✅" aria-label="Permalink to &quot;Completed ✅&quot;">​</a></h3><ul><li>[x] <strong>Phase 1</strong>: CLI mode with sidebar UI</li><li>[x] <strong>Automatic reranking</strong> for better relevance</li><li>[x] <strong>Visual score indicators</strong> with color coding</li><li>[x] <strong>Line numbers</strong> and match highlighting</li><li>[x] <strong>Relative path display</strong> for clean results</li><li>[x] <strong>Keyboard navigation</strong> for efficient workflow</li><li>[x] <strong>Search selection</strong> command for quick searches</li></ul><h3 id="in-progress-🚧" tabindex="-1">In Progress 🚧 <a class="header-anchor" href="#in-progress-🚧" aria-label="Permalink to &quot;In Progress 🚧&quot;">​</a></h3><ul><li>[ ] <strong>Phase 2</strong>: MCP server integration for persistent connections</li><li>[ ] <strong>Streaming results</strong> for large codebases</li><li>[ ] <strong>Progress indicators</strong> for long-running searches</li></ul><h3 id="planned-📋" tabindex="-1">Planned 📋 <a class="header-anchor" href="#planned-📋" aria-label="Permalink to &quot;Planned 📋&quot;">​</a></h3><ul><li>[ ] <strong>Phase 3</strong>: Full syntax highlighting in previews</li><li>[ ] <strong>Phase 4</strong>: Peek view for inline results</li><li>[ ] <strong>Phase 5</strong>: Multi-workspace support</li><li>[ ] <strong>Result filtering</strong> UI controls</li><li>[ ] <strong>Search history</strong> and favorites</li><li>[ ] <strong>Custom theme</strong> support</li></ul><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="extension-doesn-t-activate" tabindex="-1">Extension Doesn’t Activate <a class="header-anchor" href="#extension-doesn-t-activate" aria-label="Permalink to &quot;Extension Doesn’t Activate&quot;">​</a></h3><p><strong>Symptoms</strong>: Extension icon not visible, commands not available</p><p><strong>Solutions</strong>:</p><ol><li>Check Output panel: View → Output → “ck”</li><li>Look for errors in Developer Tools: Help → Toggle Developer Tools</li><li>Verify extension installed: Extensions → Search “ck”</li><li>Restart VS Code</li></ol><h3 id="ck-binary-not-found" tabindex="-1">ck Binary Not Found <a class="header-anchor" href="#ck-binary-not-found" aria-label="Permalink to &quot;ck Binary Not Found&quot;">​</a></h3><p><strong>Symptoms</strong>: “ck command not found” error</p><p><strong>Solutions</strong>:</p><ol><li><p>Verify ck in PATH:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # macOS/Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Windows</span></span></code></pre></div></li><li><p>Install if missing:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-search</span></span></code></pre></div></li><li><p>Set absolute path in settings:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.cliPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/usr/local/bin/ck&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h3 id="search-returns-no-results" tabindex="-1">Search Returns No Results <a class="header-anchor" href="#search-returns-no-results" aria-label="Permalink to &quot;Search Returns No Results&quot;">​</a></h3><p><strong>Symptoms</strong>: Empty results despite known matches</p><p><strong>Solutions</strong>:</p><ol><li><p>Test ck in terminal:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/workspace</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;test query&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div></li><li><p>Check index status (yellow dot = needs reindexing)</p></li><li><p>Manually reindex: Run <code>ck: Reindex</code> command</p></li><li><p>Verify workspace folder is open in VS Code</p></li><li><p>Check threshold setting (might be too high):</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.threshold&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Lower for more results</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li></ol><h3 id="results-seem-outdated" tabindex="-1">Results Seem Outdated <a class="header-anchor" href="#results-seem-outdated" aria-label="Permalink to &quot;Results Seem Outdated&quot;">​</a></h3><p><strong>Symptoms</strong>: New code doesn’t appear, deleted code still shows</p><p><strong>Solutions</strong>:</p><ol><li>Run <code>ck: Reindex</code> command</li><li>Check <code>.ckignore</code> patterns aren’t excluding files</li><li>Verify files are committed/staged (respects <code>.gitignore</code>)</li></ol><h3 id="webview-not-loading" tabindex="-1">Webview Not Loading <a class="header-anchor" href="#webview-not-loading" aria-label="Permalink to &quot;Webview Not Loading&quot;">​</a></h3><p><strong>Symptoms</strong>: Blank search panel</p><p><strong>Solutions</strong>:</p><ol><li>Check CSP errors in Developer Tools console</li><li>Verify webview resources exist in <code>ck-vscode/webview/</code></li><li>Reinstall extension:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --uninstall-extension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> beaconbay.ck-search</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-extension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span></code></pre></div></li></ol><h3 id="performance-issues" tabindex="-1">Performance Issues <a class="header-anchor" href="#performance-issues" aria-label="Permalink to &quot;Performance Issues&quot;">​</a></h3><p><strong>Symptoms</strong>: Slow searches, high CPU usage</p><p><strong>Solutions</strong>:</p><ol><li><p>Reduce <code>topK</code> setting:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;ck.topK&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Default: 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li><p>Increase debounce (edit webview config if needed)</p></li><li><p>Use regex mode for simple patterns (faster than semantic)</p></li><li><p>Exclude large directories in <code>.ckignore</code></p></li></ol><h2 id="jetbrains-plugin-planned" tabindex="-1">JetBrains Plugin (Planned) <a class="header-anchor" href="#jetbrains-plugin-planned" aria-label="Permalink to &quot;JetBrains Plugin (Planned)&quot;">​</a></h2><p>Support for IntelliJ IDEA, PyCharm, and WebStorm is planned for future releases.</p><p><strong>Roadmap</strong>:</p><ul><li>v0.7: Initial IntelliJ IDEA plugin</li><li>Common features across all JetBrains IDEs</li><li>Native UI integration with IDE theme support</li></ul><p>Track progress: <a href="https://github.com/BeaconBay/ck/issues" target="_blank" rel="noreferrer">GitHub Issue #</a></p><h2 id="see-also" tabindex="-1">See Also <a class="header-anchor" href="#see-also" aria-label="Permalink to &quot;See Also&quot;">​</a></h2><ul><li><a href="/ck/features/tui-mode.html">TUI Mode</a> — Interactive terminal interface</li><li><a href="/ck/features/mcp-integration.html">MCP Integration</a> — AI agent integration</li><li><a href="/ck/reference/cli.html">CLI Reference</a> — Complete command-line reference</li><li><a href="/ck/features/hybrid-search.html">Hybrid Search</a> — Understanding threshold scales</li><li><a href="https://github.com/BeaconBay/ck" target="_blank" rel="noreferrer">GitHub Repository</a> — Source code and issues</li></ul>`,133)])])}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
