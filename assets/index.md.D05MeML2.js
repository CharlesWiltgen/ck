import{_ as i,c as e,o as a,ag as t}from"./chunks/framework.BmMagzGG.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"ck <span style=\\"font-weight:300;\\">(\\"seek\\")</span>","text":"Semantic Code Search","tagline":"Four interfaces. One powerful search. CLI, TUI, Editor, or MCP — find code by meaning with intelligent semantic search","image":{"src":"/logo.png","alt":"ck logo"},"actions":[{"theme":"brand","text":"Get Started","link":"/guide/getting-started"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/BeaconBay/ck"}]},"features":[{"icon":"💻","title":"Terminal User Interface","details":"Interactive search with live results, visual score heatmaps, and keyboard-driven navigation. Explore code with TUI mode for instant feedback","link":"/features/tui-mode"},{"icon":"🔌","title":"Editor Integration","details":"Native VSCode and Cursor extension. Search without leaving your editor with inline results, instant navigation, and live updates","link":"/features/editor-integration"},{"icon":"🤖","title":"AI Agent Integration","details":"Built-in MCP (Model Context Protocol) server for seamless integration with Claude Desktop, Cursor, and any MCP-compatible AI client","link":"/features/mcp-integration"},{"icon":"🔍","title":"Semantic Search","details":"Find code by concept, not keywords. Search for \\"retry logic\\" and find backoff, circuit breakers, and related patterns even without exact matches","link":"/features/semantic-search"},{"icon":"🎯","title":"Hybrid Search","details":"Combine keyword precision with semantic understanding using Reciprocal Rank Fusion for best-of-both-worlds search results","link":"/features/hybrid-search"},{"icon":"🚀","title":"Blazing Fast","details":"~1M LOC indexed in under 2 minutes. Sub-500ms queries. Chunk-level incremental indexing only re-embeds what changed","link":"/guide/basic-usage"},{"icon":"⚡","title":"Drop-in grep Replacement","details":"All your muscle memory works. Same flags, same behavior, same output format — plus semantic understanding when you need it","link":"/features/grep-compatibility"},{"icon":"📦","title":"Completely Offline","details":"Everything runs locally. No code or queries sent to external services. Embedding model downloaded once and cached locally","link":"/reference/models"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),n={name:"index.md"};function l(r,s,o,h,c,d){return a(),e("div",null,[...s[0]||(s[0]=[t(`<h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install from crates.io</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-search</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># CLI: Command-line search (grep-compatible)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sem</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error handling&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --hybrid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;connection timeout&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;TODO&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.rs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TUI: Interactive terminal UI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck-tui</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Type queries, see live results, navigate with ↑/↓</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Editor: VSCode/Cursor extension</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-extension</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-search</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Press Cmd+Shift+; to search</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MCP: AI agent integration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ck</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --serve</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Configure in Claude Desktop for AI-assisted search</span></span></code></pre></div><h2 id="why-ck" tabindex="-1">Why ck? <a class="header-anchor" href="#why-ck" aria-label="Permalink to &quot;Why ck?&quot;">​</a></h2><p><strong>ck (seek)</strong> finds code by meaning, not just keywords. It’s the grep you wish you had:</p><ul><li>🎯 <strong>Understand intent</strong> – Search for “error handling” and find try/catch blocks, error returns, and exception handling even when those exact words aren’t present</li><li>🤖 <strong>AI-first</strong> – Built-in MCP server for direct integration with AI coding assistants</li><li>⚡ <strong>Fast &amp; efficient</strong> – Automatic incremental indexing, sub-second queries</li><li>🔧 <strong>Drop-in replacement</strong> – Works exactly like grep/ripgrep with all the flags you know</li><li>🌐 <strong>Multi-language</strong> – Python, JavaScript/TypeScript, Rust, Go, Ruby, Haskell, C#, and more</li><li>🔒 <strong>Privacy-first</strong> – 100% offline, no telemetry, no external API calls</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><h3 id="from-crates-io-recommended" tabindex="-1">From crates.io (recommended) <a class="header-anchor" href="#from-crates-io-recommended" aria-label="Permalink to &quot;From crates.io (recommended)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-search</span></span></code></pre></div><h3 id="from-source" tabindex="-1">From source <a class="header-anchor" href="#from-source" aria-label="Permalink to &quot;From source&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/BeaconBay/ck</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ck-cli</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><div class="vp-doc"><ul><li><a href="/ck/guide/getting-started.html"><strong>Getting Started Guide</strong></a> — Installation and first search</li><li><a href="/ck/guide/choosing-interface.html"><strong>Choosing an Interface</strong></a> — CLI, TUI, Editor, or MCP?</li><li><a href="/ck/features/tui-mode.html"><strong>TUI Mode</strong></a> — Interactive terminal interface</li><li><a href="/ck/features/editor-integration.html"><strong>Editor Integration</strong></a> — VSCode/Cursor extension</li><li><a href="/ck/features/mcp-integration.html"><strong>MCP Integration</strong></a> — Connect with AI agents</li><li><a href="/ck/guide/basic-usage.html"><strong>Basic Usage</strong></a> — Common patterns and workflows</li><li><a href="/ck/reference/cli.html"><strong>CLI Reference</strong></a> — Complete command-line reference</li></ul></div>`,12)])])}const g=i(n,[["render",l]]);export{k as __pageData,g as default};
