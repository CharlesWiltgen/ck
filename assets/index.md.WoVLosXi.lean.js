import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.BmMagzGG.js";const d=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"ck","text":"Semantic Code Search","tagline":"Supercharges your coding LLM with grep-compatible, semantic search that understands what you're looking for, instead of just string patterns","image":{"src":"/logo.png","alt":"ck logo"},"actions":[{"theme":"brand","text":"Get Started","link":"/guide/getting-started"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/BeaconBay/ck"}]},"features":[{"icon":"🤖","title":"AI Agent Integration","details":"Built-in MCP (Model Context Protocol) server for seamless integration with Claude Desktop, Cursor, and any MCP-compatible AI client","link":"/features/mcp-integration"},{"icon":"🔍","title":"Semantic Search","details":"Find code by concept, not keywords. Search for \\"retry logic\\" and find backoff, circuit breakers, and related patterns even without exact matches","link":"/features/semantic-search"},{"icon":"⚡","title":"Drop-in grep Replacement","details":"All your muscle memory works. Same flags, same behavior, same output format — plus semantic understanding when you need it","link":"/features/grep-compatibility"},{"icon":"🎯","title":"Hybrid Search","details":"Combine keyword precision with semantic understanding using Reciprocal Rank Fusion for best-of-both-worlds search results","link":"/features/hybrid-search"},{"icon":"🚀","title":"Blazing Fast","details":"~1M LOC indexed in under 2 minutes. Sub-500ms queries. Automatic delta indexing only processes changed files","link":"/guide/basic-usage"},{"icon":"📦","title":"Completely Offline","details":"Everything runs locally. No code or queries sent to external services. Embedding model downloaded once and cached locally","link":"/reference/models"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}`),n={name:"index.md"};function l(r,s,o,h,c,p){return e(),a("div",null,[...s[0]||(s[0]=[t("",12)])])}const g=i(n,[["render",l]]);export{d as __pageData,g as default};
